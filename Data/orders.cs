//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemontApp.Data
{
    using System;
    using System.Collections.Generic;
    using System.Text;

    public partial class orders
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public orders()
        {
            this.order_services = new HashSet<order_services>();
        }
    
        public int order_id { get; set; }
        public Nullable<int> client_id { get; set; }
        public Nullable<int> manager_id { get; set; }
        public Nullable<int> executor_id { get; set; }
        public Nullable<decimal> price { get; set; }
        public string description { get; set; }
        public Nullable<bool> is_comleted { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<order_services> order_services { get; set; }
        public virtual users users { get; set; }
        public virtual users users1 { get; set; }
        public virtual users users2 { get; set; }

        public override string ToString()
        {
            StringBuilder info=new StringBuilder();
            if (users != null)
            {
                string client = "ФИО клиента: " + users.lastname + " " + users.firstname + " " + users.middlename;
                info.AppendLine(client);
            }
            if(users1 != null)
            {
                string executor = "ФИО исполнителя: " + users1.lastname + " " + users1.firstname + " " + users1.middlename;
                info.AppendLine(executor);
            }
            if (users2 != null)
            {
                string manager = "ФИО менеджера: " + users2.lastname + " " + users2.firstname + " " + users2.middlename;
                info.AppendLine(manager);
            }

            string services = "";
            foreach(Data.order_services os in order_services)
            {
                services += "; " + os.services.name;
            }

            info.AppendLine(services);
            info.AppendLine("Цена " + price);
            info.AppendLine("Описание " + description);

            if (is_comleted == true)
            {
                info.AppendLine("-Завершен-");
            }
            return info.ToString();
        }
    }
}
